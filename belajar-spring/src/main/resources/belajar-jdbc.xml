<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Menurut dokumentasi spring konfigurasi dibawah (jdbc configuration) hanya untuk test koneksi tidak dianjurkan
		 untuk menangani banyak request transaksi pada database 
		 
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
	</bean> -->
	
	<!-- configurasi jdbc menggunakan connection pooling, dibawah ini adalah konfigurasi menggunakan dbcp
		 macam-macam connection pooling selain dbcp adalah hikari, c3p0 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="${database.driver}"/>
	    <property name="url" value="${database.url}"/>
	    <property name="username" value="${database.username}"/>
	    <property name="password" value="${database.password}"/>
	    <property name="maxWaitMillis" value="10000"/>
	    <property name="maxTotal" value="80"/>
	</bean>
	
	<!-- Transaction Managament Configuration -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- Transaction Managament Configuration -->
    <tx:annotation-driven proxy-target-class="true" /> 

	<context:property-placeholder location="classpath:database.properties" /> <!-- tamabahin classpath -->
    <context:component-scan base-package="belajar.spring.jdbc"></context:component-scan>
</beans>